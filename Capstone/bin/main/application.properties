#Server
#Tomcat ìë ë´ì¥

server.port=8090
server.servlet.session.timeout=18000

# MySQL 드라이버 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DB URL
spring.datasource.url=jdbc:mysql://localhost:3306/datedb?useSSL=false&allowPublicKeyRetrieval=true

# DB username
spring.datasource.username=lastcoder
# DB password
spring.datasource.password=1234
spring.datasource.sql-script-encoding= UTF-8


# JPA쿼리문 확인여부
spring.jpa.show-sql=true

# DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
#none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않는다.
#update - 엔티티의 변경된 부분만 적용한다.
#validate - 변경사항이 있는지 검사만 한다.
#create - 스프링부트 서버가 시작될때 모두 drop하고 다시 생성한다.
#create-drop - create와 동일하다. 하지만 종료시에도 모두 drop 한다
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true
# true 설정시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true
hibernate.show_sql=true
 # DDL(create, alter, drop) 정의시 DB의 고유 기능을 사용할 수 있다.
spring.jpa.hibernate.ddl-auto=validate
# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여준다.
spring.jpa.properties.hibernate.format_sql=true


#트랜잭션 종료 시에 자동으로 세션을 종료하는 getCurrentSession()을 사용하는
# 편이 바람직하고 이를 위해서는 위 옵션을 thread로 설정해야 하는 것이다.
#
#openSession()을 통해서 얻은 세션은 트랜잭션 시작 후 다시 openSession()으로 세션을 생성하면 
#다른 세션이 생성된다. 그러나 getCurrentSession()으로 생성된 세션은 트랜잭션이 종료되기 전까지 동일한 세션 객체를 리턴한다.
hibernate.current_session_context_class=thread



#Webclient
server.port=${service_port:8090}
spring.application.name=webserver
spring.main.allow-bean-definition-overriding: true
#Spring WebFlux는 메모리 내 데이터 버퍼링을 위한 기본 메모리 제한을 256KB로 구성
#메모리 제한을 재설정
spring.codec.max-in-memory-size=1MB
#
##Mail
#spring.mail.host=smtp.naver.com
#spring.mail.port=465
#spring.mail.username=fc0209
#spring.mail.password=2957k7918!2K
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.ssl.enable=true
#spring.mail.properties.mail.smtp.ssl.trust=smtp.naver.com
#spring.mail.properties.mail.smtp.starttls.enable=true

logging.level.root=INFO

#thymeleaf

#새로고침시 적용(true = 미적용)
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


#hibernate.connection.pool_size=1

#HikariCP
#hibernate.hikari.minimumIdle=4
#hibernate.hikari.maximumPoolSize=4
hibernate.hikari.idleTimeout=30000
hibernate.hikari.dataSourceClassName=com.mysql.cj.jdbc.Driver
#hibernate.hikari.dataSource.user=sa
#hibernate.hikari.dataSource.password=
